events {
    worker_connections 1024;
}

http {
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Upstream configuration - dynamically set primary based on ACTIVE_POOL
    upstream app_cluster {
        # If ACTIVE_POOL=blue, this will be: server app_blue:3000 max_fails=1 fail_timeout=5s;
        # If ACTIVE_POOL=green, this will be: server app_green:3000 max_fails=1 fail_timeout=10s;
        server app_${ACTIVE_POOL}:3000 max_fails=1 fail_timeout=5s;
        
        # Backup server (opposite of active pool)
        # If ACTIVE_POOL=blue, this will be: server app_green:3000 backup;
        # If ACTIVE_POOL=green, this will be: server app_blue:3000 backup;
        server app_${STANDBY_POOL}:3000 backup;
    }


    server {
        listen 80;

        location / {
            proxy_pass http://app_cluster;

            proxy_connect_timeout 2s;
            proxy_send_timeout 3s;
            proxy_read_timeout 3s;

            # Retry on errors, timeouts, and 5xx
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;


            # Retry policy: retry on errors, timeouts, and 5xx responses
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;
            
            # Forward original request headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Critical: Don't buffer to ensure immediate failover
            proxy_buffering off;
            
            # HTTP version for better connection handling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    
        # Health check endpoint (optional, for monitoring nginx itself)
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;    
    }
}
